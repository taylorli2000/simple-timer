{"version":3,"sources":["timer.js","App.js","index.js"],"names":["Timer","props","startTimer","setState","timerTime","state","timerOn","timerStart","setInterval","newTime","clearInterval","alert","stopTimer","resetTimer","adjustTimer","input","max","bind","this","seconds","Math","floor","slice","minutes","hours","start","onClick","stop","reset","className","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d32f323.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nclass Timer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      timerTime: 0,\r\n      timerOn: false,\r\n      timerStart: 0,\r\n    };\r\n    this.startTimer = this.startTimer.bind(this);\r\n    this.stopTimer = this.stopTimer.bind(this);\r\n    this.resetTimer = this.resetTimer.bind(this);\r\n  }\r\n  startTimer = () => {\r\n    this.setState({\r\n      timerTime: this.state.timerTime,\r\n      timerOn: true,\r\n      timerStart: this.state.timerStart,\r\n    });\r\n    this.Timer = setInterval(() => {\r\n      const newTime = this.state.timerTime - 10;\r\n      if (newTime >= 0) {\r\n        this.setState({\r\n          timerTime: newTime,\r\n        });\r\n      } else {\r\n        clearInterval(this.Timer);\r\n        this.setState({ timerOn: false });\r\n        alert(\"Countdown ended\");\r\n      }\r\n    }, 10);\r\n  };\r\n  stopTimer = () => {\r\n    clearInterval(this.Timer);\r\n    this.setState({ timerOn: false });\r\n  };\r\n  resetTimer = () => {\r\n    if (this.state.timerOn === false) {\r\n      this.setState({ timerTime: this.state.timerStart });\r\n    }\r\n  };\r\n  adjustTimer = (input) => {\r\n    const { timerTime, timerOn } = this.state;\r\n    const max = 216000000;\r\n    if (!timerOn) {\r\n      if (input === \"incHours\" && timerTime + 3600000 < max) {\r\n        this.setState({ timerTime: timerTime + 3600000 });\r\n      } else if (input === \"decHours\" && timerTime - 3600000 >= 0) {\r\n        this.setState({ timerTime: timerTime - 3600000 });\r\n      } else if (input === \"incMinutes\" && timerTime + 60000 < max) {\r\n        this.setState({ timerTime: timerTime + 60000 });\r\n      } else if (input === \"decMinutes\" && timerTime - 60000 >= 0) {\r\n        this.setState({ timerTime: timerTime - 60000 });\r\n      } else if (input === \"incSeconds\" && timerTime + 1000 < max) {\r\n        this.setState({ timerTime: timerTime + 1000 });\r\n      } else if (input === \"decSeconds\" && timerTime - 1000 >= 0) {\r\n        this.setState({ timerTime: timerTime - 1000 });\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    const { timerTime, timerStart, timerOn } = this.state;\r\n    let seconds = (\"0\" + (Math.floor((timerTime / 1000) % 60) % 60)).slice(-2);\r\n    let minutes = (\"0\" + Math.floor((timerTime / 60000) % 60)).slice(-2);\r\n    let hours = (\"0\" + Math.floor((timerTime / 3600000) % 60)).slice(-2);\r\n    let start = timerOn === false &&\r\n      (timerStart === 0 || timerTime === timerStart) && (\r\n        <button onClick={this.startTimer}>Start</button>\r\n      );\r\n    let stop = timerOn === true && (\r\n      <button onClick={this.stopTimer}>Stop</button>\r\n    );\r\n    let reset = timerOn === false && timerStart !== timerTime && (\r\n      <button onClick={this.resetTimer}>Reset</button>\r\n    );\r\n    return (\r\n      <div>\r\n        <div className=\"Countdown-label\">Hours : Minutes : Seconds</div>\r\n        <div className=\"Countdown-display\">\r\n          <button onClick={() => this.adjustTimer(\"incHours\")}>&#8679;</button>\r\n          <button onClick={() => this.adjustTimer(\"incMinutes\")}>\r\n            &#8679;\r\n          </button>\r\n          <button onClick={() => this.adjustTimer(\"incSeconds\")}>\r\n            &#8679;\r\n          </button>\r\n          <div className=\"Countdown-time\">\r\n            {hours} : {minutes} : {seconds}\r\n          </div>\r\n          <button onClick={() => this.adjustTimer(\"decHours\")}>&#8681;</button>\r\n          <button onClick={() => this.adjustTimer(\"decMinutes\")}>\r\n            &#8681;\r\n          </button>\r\n          <button onClick={() => this.adjustTimer(\"decSeconds\")}>\r\n            &#8681;\r\n          </button>\r\n        </div>\r\n        {start}\r\n        {stop}\r\n        {reset}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Timer;\r\n","import './App.css';\nimport Timer from './timer.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Timer/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}